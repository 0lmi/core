################################################################
@CF_DIR=/tmp
################################################################
ACCESSED_BEFORE
{
class:
top10

prepare:     
file ("earlier",ACCESS); 
file ("later",ACCESS)

execute:
policy("unit_accessed_before.cf","K")

output:
report("The earlier file has been accessed before the later")

cleanup:
file ("earlier",DELETE) 
file ("later",DELETE)
}

################################################################

BACKREFERENCES_FILES
{
class:
top10

prepare:
file ("cf3_hello",CREATE); 

execute:
policy("unit_backreferences_files.cf","KI")

output:
addline("private edit variable is .*","cf3_hello")
#file("cf3_hello.cf-before-edit",EXISTS)


 cleanup:
 file("cf3_hello", DELETE)
 file("cf3_hello.cf-before-edit", DELETE)

}

################################################################

ARRAYS
{
class:
top10

prepare:
NA

execute:
policy("unit_arrays.cf", "K")

output:
report("Global ([a-z]+) and ([a-z]+)")

cleanup:
NA
}

################################################################

# this is a negative test
UNIT_FILES_NOT_EXIST
{
class:
top10

prepare:
NA

execute:
policy("unit_filesexist.cf", "K")

output:
report("Does not yet exist")

cleanup:
NA
}
################################################################

UNIT_FILESEXIST
{
class:
top10

prepare:
file("a", CREATE)
file("b", CREATE)
file("c", CREATE)

execute:
policy("unit_filesexist.cf", "K")

output:
report("File does exist")

cleanup:
file("a", DELETE)
file("b", DELETE)
file("c", DELETE)
}
################################################################

UNIT_FILESEXIST2
{
class:
top10

prepare:
file("x", CREATE)
file("y", CREATE)
file("z", CREATE)

execute:
policy("unit_filesexist2.cf", "K")

output:
report("File does exist")

cleanup:
file("x", DELETE)
file("y", DELETE)
file("z", DELETE)
}

################################################################

CHANGED_BEFORE
{
class:
top10

prepare:
file ("later", ACCESS)
file ("earlier", ACCESS);

execute:
policy("unit_changedbefore.cf","K")

output:
report("Earlier than later!")

cleanup:
file ("earlier",DELETE)
file ("later",DELETE)
}
################################################################
CLASSES_GLOBAL
{
class:
top10

prepare:
NA

execute:
policy("unit_classes_global.cf","K")

output:
report("Success")

cleanup:
NA
}

################################################################
CLASSMATCH
{
class:
top10

prepare:
NA

execute:
policy("unit_classmatch.cf","K")

output:
report("Host matches pattern")

cleanup:
NA
}

################################################################

COMPARE
{
class:
top10

prepare:
NA

execute:
policy("unit_compare.cf","K")

output:
report("Assertion is true")

cleanup:
NA
}

################################################################

COUNTCLASSESMATCHING
{
class:
top10

prepare:
file("unit_countclassesmatching.cf",EXISTS)

execute:
policy("unit_countclassesmatching.cf","K")

output:
report("Found 3 classes matching cf.*")

cleanup:
NA
}

################################################################

DISKFREE
{
 class:
 top10
 
 prepare:
 NA
 
 execute:
 policy("unit_diskfree.cf","K")
 
 output:
 report("Freedisk [0-9]+")
 
 cleanup:
 
}

################################################################

EDIT_PASSWD_FILE
{
 class:
 top10
 
 prepare:
 NA
 
 execute:
 policy("unit_edit_passwd_file.cf","K")
 
 output:
# addline("mark:x:1000:100:Mark Burgess:/home/mark:/bin/bash","passwd")
 addline("fred:x:1001:100:Right Said:/home/fred:/bin/bash","passwd")
 addline("jane:x:1002:100:Jane Doe:/home/jane:/bin/bash","passwd")

 cleanup:
 file("passwd", DELETE)
 file("passwd.cf-before-edit", DELETE)
 
}

################################################################
EDIT_SETVAR
{
 class:
 top10
 
 prepare:
 file("test_setvar", CREATE)
 
 execute:
 policy("unit_edit_setvar.cf","K")
 
 output:
 addline("variable_1 = value_1","test_setvar")
 addline("variable_2 = value_2","test_setvar")
 cmpenv("PGK_PATH","/tmp")

 cleanup:
 file("test_setvar", DELETE)
 file("test_setvar.cf-before-edit", DELETE)
}

################################################################
