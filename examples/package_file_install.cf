#
# Runs any new or changed .bat/.exe files dropped in a directory,
# executes msiexec on any .msi files. Does nothing on files not having any of these suffixes.
# Note that interactive installations/error dialogue boxes will cause problems for automation (as always).
#

body common control
{
inputs => { "cfengine_stdlib.cf" };
bundlesequence => { "package_files_install" };
}

bundle agent package_files_install
{
vars:
  "package_source_dir" string => "\\\\WIN-UPDMCTOK4v0\repo";
  
  "package_list_string" string => execresult("$(sys.winsysdir)\cmd.exe /c dir $(package_source_dir) /b", "noshell");
  "package_list" slist => splitstring("$(package_list_string)", "\r\n", "10000");

  "package_list_executable" slist => grep(".*\.(exe|bat)$", "package_list");  
  "package_list_msi"        slist => grep(".*\.msi$", "package_list");

files:
  "$(package_source_dir)\$(package_list)"
      comment => "Scan for file changes in repository",
      changes => detect_content,
	 classes  => if_repaired("package_file_changed_$(package_list)");
  
commands:
  "$(package_list_executable)"
    comment    => "Run executable file if we have not seen it or it has changed",
    ifvarclass => canonify("package_file_changed_$(package_list_executable)"),
	handle     => "package_install_executable_$(package_list_executable)";
	
  "\"$(sys.winsysdir)\msiexec.exe\" /qn /i $(package_list_msi)"
    comment    => "Install msi-file if we have not seen it or it has changed",
    ifvarclass => canonify("package_file_changed_$(package_list_msi)"),
	handle     => "package_install_msi_$(package_list_msi)";
  
reports:
 "File $(package_list) changed"
   ifvarclass => canonify("package_file_changed_$(package_list)");
}
