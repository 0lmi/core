#  Copyright (C) Cfengine AS

#  This file is part of Cfengine 3 - written and maintained by Cfengine AS.

#  This program is free software; you can redistribute it and/or modify it
#  under the terms of the GNU General Public License as published by the
#  Free Software Foundation; version 3.

#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA

# To the extent this program is licensed as part of the Enterprise
# versions of Cfengine, the applicable Commercial Open Source License
# (COSL) may apply to this file if you as a licensee so wish it. See
# included file COSL.txt.

#+begin_src cfengine3
body common control
{
      bundlesequence  => { "example" };
}

bundle agent example

{
  vars:

      "my_result" string => execresult("/bin/ls /tmp","noshell");

  reports:

    linux::

      "Variable is $(my_result)";

}
#+end_src
###############################################################################
#+begin_src example_output
2013-12-16T20:48:15+0200   notice: /default/example: R: Variable is accessedbefore.cf
accessedbefore.out
accumulated.cf
ago.cf
ago.out
and.cf
bundlesmatching.cf
bundlesmatching.out
canonify.cf
canonify.out
canonifyuniquely.cf
changedbefore.cf
classesmatching.cf
classesmatching.out
classify.cf
classmatch.cf
classmatch.out
concat.cf
countclassesmatching.cf
countclassesmatching.out
countlinesmatching.cf
countlinesmatching.out
difference.cf
difference.out
dirname.cf
dirname.out
diskfree.cf
diskfree.out
downcase.cf
downcase.out
earlier
escape.cf
escape.out
eval.cf
every.cf
every.out
execresult.cf
execresult.out
fileexists.cf
fileexists.out
filesexist.cf
filesexist.out
filesize.cf
filesize.out
filestat.cf
filestat.out
filter.cf
filter.out
findfiles.cf
findfiles.out
foo
format.cf
format.out
getenv.cf
getenv.out
getfields.cf
getfields.out
getgid.cf
getgid.out
getindices.cf
getindices.out
getuid.cf
getuid.out
getusers.cf
getusers.out
getvalues.cf
getvalues.out
grep.cf
grep.out
groupexists.cf
groupexists.out
hash.cf
hash.out
hashmatch.cf
head.cf
head.out
host2ip.cf
hostinnetgroup.cf
hostrange.cf
hostsseen.cf
hostswithclass.cf
hubknowledge.cf
ifelse.cf
intersection.cf
intersection.out
ip2host.cf
ip2host.out
iprange.cf
irange.cf
isdir.cf
isdir.out
isexecutable.cf
isexecutable.out
isgreaterthan.cf
isgreaterthan.out
islessthan.cf
islessthan.out
islink.cf
islink.out
isnewerthan.cf
isnewerthan.out
isplain.cf
isplain.out
isvariable.cf
isvariable.out
join.cf
join.out
lastnode.cf
lastnode.out
later
laterthan.cf
ldaparray.cf
ldaplist.cf
ldapvalue.cf
length.cf
length.out
lin
link
lsdir.cf
lsdir.out
maparray.cf
maparray.out
maplist.cf
maplist.out
mergedata.cf
none.cf
none.out
not.cf
now.cf
nth.cf
nth.out
on.cf
or.cf
parseintrealstringarray.cf
parseintrealstringarray.out
parsejson.cf
parsestringarrayidx.cf
parsestringarrayidx.out
peerleader.cf
peerleader.out
peerleaders.cf
peers.cf
product.cf
product.out
randomint.cf
randomint.out
readfile.cf
readfile.out
readintrealstringarray.cf
readintrealstringlist.cf
readintrealstringlist.out
readjson.cf
readstringarrayidx.cf
readtcp.cf
readtcp.out
regarray.cf
regarray.out
regcmp.cf
regcmp.out
regextract.cf
regextract.out
registryvalue.cf
registryvalue.out
regldap.cf
regline.cf
reglist.cf
reglist.out
remoteclassesmatching.cf
remotescalar.cf
returnszero.cf
returnszero.out
reverse.cf
reverse.out
reversestring.cf
reversestring.out
rrange.cf
selectservers.cf
shuffle.cf
shuffle.out
some.cf
some.out
sort.cf
splayclass.cf
splitstring.cf
splitstring.out
storejson.cf
strcmp.cf
strcmp.out
strftime.cf
strftime.out
strlen.cf
strlen.out
sublist.cf
sublist.out
sum.cf
sum.out
tail.cf
tail.out
translatepath.cf
translatepath.out
unique.cf
unique.out
upcase.cf
upcase.out
usemodule.cf
userexists.cf
userexists.out
variablesmatching.cf
variablesmatching.out
#+end_src
