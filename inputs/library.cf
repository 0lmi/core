#
# Just bodies and editbundles here
#

body perms p(user,mode)

{
owners => { "$(user)" };
mode   => "$(mode)";
}

############################################

body depth_search recurse(d)

{
depth => "$(d)";
}

#########################################################

body delete tidy

{
dirlinks => "delete";          #keep/tidy/delete
rmdirs   => "true";             #none/all/sub
}

#########################################################

body file_select days_old(days)

#
# we can build old "include", "exclude", and "ignore" 
# from these as standard patterns - these bodies can
# form a library of standard patterns
#

{
mtime       => irange(ago(1,0,0,0,0,0),ago(0,0,$(days),0,0,0));  
file_result => "mtime"; 
}

#########################################################

body changes trip_wire

{
hash           => "best";
report_changes => "content";
update         => "yes";
}

########################################################

body action longjob
{
ifelapsed => "240";
}

#######################################################
# For the library
#######################################################

bundle edit_line resolver

{
vars:

 "search" slist => { "search iu.hio.no cfengine.com" };

delete_lines:

  "search.*";

insert_lines:

  "$(search)" location => start;
}

#######################################################

body edit_defaults def
{
empty_file_before_editing => "false";
edit_backup => "false";
max_file_size => "100000";
}

########################################################

body location start

{
# If not line to match, applies to whole text body
before_after => "before";
}

########################################################

bundle edit_line DeleteLinesMatching(regex)
  {
  delete_lines:

    "$(regex)",
  action => WarnOnly;

  }

########################################################

body action WarnOnly
{
action_policy => "warn";
ifelapsed => "1";
}
