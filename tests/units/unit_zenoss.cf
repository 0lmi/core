 #  Copyright (C) Cfengine AS

#  This file is part of Cfengine 3 - written and maintained by Cfengine AS.

#  This program is free software; you can redistribute it and/or modify it
#  under the terms of the GNU General Public License as published by the
#  Free Software Foundation; version 3.

#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA

# To the extent this program is licensed as part of the Enterprise
# versions of Cfengine, the applicable Commerical Open Source License
# (COSL) may apply to this file if you as a licensee so wish it. See
# included file COSL.txt.

######################################################################
#
# Zenoss integration
# 
######################################################################

body common control
{
bundlesequence  => { "zenoss"  };
syslog_host => "zenoss_syslog.example.org";
syslog_port => "514";
}

########################################################

bundle agent zenoss
{
processes:

  "bad_process" 
  
   comment => "Make sure that process X is not running, tell zenoss if it was",
   signals => { "term", "kill" },
    action => tell_zenoss_repaired("bad_process was killed");

files:

  "/etc/passwd"

  comment => "Check passwd security, tell zenoss if permissions were wrong",
     mode => mog("644","root","root"),
   action => tell_zenoss_repaired("passwd file had incorrect permissions");

commands:

  "/my/important/script -xyz"

    comment => "Run my mission critical batch process",
     action => tell_zenoss_failed("myscript failed to execute or returned error");

}

#
# Library stuff
#

body action tell_zenoss_repaired(x)
{
log_repaired => "udp_syslog";
log_string   => "zenoss_cfengine_integration $(x) promise repaired";
ifelapsed    => "10"; # Every 10 mins
}

body action tell_zenoss_failed(x)
{
log_notkept => "udp_syslog";
log_string  => "zenoss_cfengine_integration $(x) persistent problem";
ifelapsed   => "10"; # Every 10 mins
}
