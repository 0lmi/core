\input texinfo-altfont
\input texinfo-logo
\input texinfo
@selectaltfont{cmbright}
@setlogo{CFEngineFrontPage}

@c *********************************************************************
@c
@c  This is a TEXINFO file. It generates both TEX documentation and
@c  the "on line" documentation "info" files.
@c
@c  The file is structured like a programming language. Each chapter
@c  starts with a chapter comment.
@c
@c  Menus list the subsections so that an online info-reader can parse
@c  the file hierarchically.
@c
@c ***********************************************************************
@c %** start of header
@setfilename orion-cloud.info
@settitle The Cfengine Orion Cloud Pack
@setchapternewpage odd
@c %** end of header

@titlepage
@title The Cfengine Orion Cloud Pack - EC2
@subtitle A Cfengine Handbook
@author Cfengine AS


@page

@cartouche
@quotation
Get the Cloud under Orion's belt with the Cfengine Orion Cloud Pack.

This document describes the Three Steps you need to bring reliability
and efficiency to Managed Services running out of the Amazon Cloud.
Set up and tear down machines as you like, and bring instant
configuration and compliance, with self-healing to your business.
@end quotation
@end cartouche

@vskip 0pt plus 1filll
Copyright @copyright{} 2010- Cfengine AS

@end titlepage


@c *************************** File begins here ************************


@ifinfo
@dircategory CFEngine Training
@direntry
* CFEngine Modularization:
                      CFEngine is a language based tool specifically
                      designed for configuring and maintaining
                      Unix-like operating systems attached
                      to a TCP/IP network.
@end direntry
@end ifinfo

@ifnottex
@menu
* Introduction to Orion::       
* Some background on EC2::      
* Prerequisites for setting up Orion::  
* Three steps to the cloud::    
* How do I know that CFEngine is maintaining the system?::  
* Benefits for users running CFEngine Nova::  
* The Cloud Pack Nursury::      
* Orion Support::               
* Orion License::               
* Cultural References to Orion and Cloud::  
@end menu

@node Top
@top CFEngine-Tutorial
@end ifnottex
@iftex
@contents
@end iftex

@ifhtml
@html
<a href="#Contents"><h1>COMPLETE TABLE OF CONTENTS</h1></a>
<h2>Summary of contents</h2>
@end html
@end ifhtml



@node Introduction to Orion
@unnumberedsec Introduction to the CFEngine Orion Cloud Pack

@sp 1

Welcome to the CFEngine Orion Cloud Pack. This version of the package
has been designed to work specificallgy with the @i{Amazon Elastic
Compute Cloud}. It allows you to configure a cloud computer or
`platform instance' to run common services in a reproducible and
maintainable way and without human intervention.

@sp 1
@cartouche
The CFEngine Cloud Pack is not a tool for performing elastic scaling
of services on demand, rather it is a simple repeatable process for
speeding up system installation with automatic self-healing, for a
consistent and compliant outcome. 
@end cartouche
@sp 1

CFEngine is uniquely suited to work in the Cloud because it is capable
of install systems and maintaining and repairing them with hands-free
capabilities that cannot be matched by other software.
The CFEngine Orion Cloud Pack may also be used on any other non-Cloud systems
that run the base operating-systems discussed here. 

You can thus
test and learn about CFEngine using disposable Cloud `instances' and
then use your experience on more permanent hardware elsewhere, if you
wish. Or, you can simply use the CFEngine Orion Cloud Pack to bring up
cloud services and configure them to a desired state on demand.

@node Some background on EC2
@unnumberedsec Some background on EC2
	
If you are familiar with Amazon Amazon Elastic Compute Cloud (EC2),
you will find the instructions here straightforward. You can
choose between these alternative paths:
@itemize
@item Do It Yourself: launch your own Amazon Machine Image and install CFEngine
on your own, then install the Orion Cloud Pack software and continue. If you choose
this option, your CFEngine policies are only examples and are unsupported.

@item With our Help: use one of our publicly available images, located
in the Amazon storage area, which has CFEngine Community Edition
pre-installed for your convenience, then follow the Orion Cloud Pack
installation procedure to continue. You will then have access to 30
days of E-mail support from CFEngine, with a maximum of 5 enquires.
@end itemize

@sp 1

@cartouche
An Amazon Machine Image or AMI is a pre-configured server designed to
be launched and available on demand. Each AMI template has a unique
number of the form @code{ami-XXXXX}.  Advanced users may also create
their own images customized with applications, data and configuration
settings as desired. The AMIs are the @i{baseline} or starting point
for Cloud Computing.
@end cartouche

@page

@node Prerequisites for setting up Orion
@unnumberedsec Prerequisites for setting up Orion
@sp 1

To get started in the Cloud, you will need an Amazon Web services
account and some familiarity with either the web interface or command
line tools@footnote{This booklet is not meant as an introduction to using the
Amazon EC2. See the Appendices for references to Cloud Resources.}.

@sp 1
@cartouche
You should know something about configuration of
@i{security groups}. For a start-to-finish guide to launching an AMI
and setting up the CFEngine Orion Cloud Pack see Appendix A.
@end cartouche

@sp 1
@noindent We have published the following AMIs on EC2 storage for your convenience:

@sp 1
@multitable @columnfractions .33 .33 .33
@item	@tab us-east @tab	us-west
@item Ubuntu Server 9.10 32 @tab ami-XXXXXX @tab ami-XXXXXX
@item Ubuntu Server 9.10 64 @tab ami-XXXXXX @tab ami-XXXXXX
@item Centos 5.4 32 @tab ami-XXXXXX @tab ami-XXXXXX
@item Centos 5.4 64 @tab ami-XXXXXX @tab ami-XXXXXX
@end multitable

@sp 1
@noindent You should subscribe to one or more of these. The following
sections assume that you have already acquired such an instance.

@node Three steps to the cloud
@unnumberedsec Three steps to the cloud

To use the CFEngine Orion Cloud Pack, there are just three steps:
@sp 1
@enumerate
@item @b{UNPACK}: Copy the CFEngine Orion Cloud Pack to your EC2 instance
and unpack the files in @file{/var/cfengine/masterfiles}.

@item @b{CUSTOMIZE}: Edit the policy promise examples for your purposes.
In particular, look at the master file @file{promises.cf}, comment out
or uncomment the promises you want. The default promises construct a
PHP enabled webserver. You should also place the IP address of the policy
server in the @file{policy_server.dat} file, like this:
@example
echo "@var{IP-address}" > /var/cfengine/policy_server.dat 
@end example
This tells CFEngine where to look for the cloud pack. If you are
running on a single test machine, you can make this localhost
(127.0.0.1); if you are running several machines, make it the first
machine where you installed the cloud-pack.

Fill in the @code{policy_server} variable with the appropriate IP
address in @file{update.cf} and @file{promises.cf}. This guide assumes
that the single instance your hvae created will be its own policy
server. However when setting up multiple instances one or more may be
â€˜promoted' to be policy servers.

@item @b{ACTIVATE}: Run @code{cf-agent -f /var/cfengine/masterfiles/failsafe.cf'}
to start CFEngine management.
@end enumerate

@sp 1
You now have a running `instance', with services configured and
maintained by CFEngine.

@node How do I know that CFEngine is maintaining the system?
@unnumberedsec How do I know that CFEngine is maintaining the system?

Execute @samp{ps aux | grep cf-} to see cf-agent, cf-serverd and
cf-execd in the process table.  To test self repair try stopping the
web server.

@page



@node Benefits for users running CFEngine Nova
@unnumberedsec Additional benefits for users running CFEngine Nova

@sp 1

If you have access to a commercial edition of the CFEngine
software, such as CFEngine Nova, you will have a number of immediate
benefits to simplify Cloud Management.

@itemize
@item @b{Knowledge and monitoring}

Without any further configuration or third party software, you can
monitor your cloud instances with CFEngine Nova's reporting features.
You can add special logging and see performance trend analysis,
integrated into your Nova Knowledge Map. 

@sp1
@center{@image{monitor,10cm,,Monitorng,png}}

@item @b{Compliance reporting}

Not only will
you see the automatically integrated policy documentation but you will
be able to trace the behaviour and utilization of your systems over
the lifetime of the virtual instance.

@item @b{Set up databases using @code{database} promsises}

Most users working in the cloud are running some kind of Model View Controller
web framework in which a database (like MySQL or PostgreSQL) features
importantly. With CFEngine Nova, you can also manage the creation of
databases for the setting up the data services and applications 
inside PHP, Java and other frameworks.

@end itemize



@page
@node The Cloud Pack Nursury
@unnumberedsec The Cloud Pack Contents


The files in the Cloud Pack fall into 3 categories: essential set up
files for getting CFEngine running, examples of pro-active maintenance
and examples of basic machine installation and setup.
@sp 1
@multitable @columnfractions .35 .65
@item @b{Essential Files}	@tab  @b{Description}
@item @file{promises.cf}	@tab Main configuration file.
@item @file{update.cf}	        @tab Update configuration.
@item @file{failsafe.cf}	@tab Falisafe configuration.
@item @file{cfengine_stdlib.cf}	@tab CFEngine standard library.
@end multitable

@sp 1

@multitable @columnfractions .35 .65
@item @b{Maintenance examples}	@tab  @b{Description}
@item @file{change_mgt.cf}	@tab Implement security tripwire on files/directories.
@item @file{ensure_ownership.cf} @tab Home directory ownership and permission maintenance.
@item @file{fix_broken_software.cf}	@tab Package installation and permission correction.
@item @file{garbage_collection.cf}	@tab Log rotation and removal.
@item @file{harden_xinetd.cf}	@tab Disable xinetd services specified.
@item @file{iptables.cf}	@tab Secure system with sysctl.conf and iptables.
@item @file{name_resolution.cf}	@tab Edit /etc/resolv.conf to the specified DNS servers
@end multitable

@sp 1

@multitable @columnfractions .35 .65
@item @b{System setup examples}	@tab  @b{Description}
@item @file{c_cpp_env.cf}      @tab Set up C programming environment.	
@item @file{db_mysql.cf}      @tab Install and run MySQL
@item @file{db_postgresql.cf}      @tab Install and run PostgreSQL
@item @file{db_sqllite.cf}      @tab Install and run SQLlite
@item @file{jboss_server.cf}      @tab Prepare JAVA environment and run JBOSS.	
@item @file{nagios.cf}      @tab Setup NAGIOS monitoring node.
@item @file{nginx_perlcgi.cf}      @tab Setup NGINX webserver perlCGI.
@item @file{nginx_phpcgi.cf}      @tab Setup NGINX webserver  phpCGI.
@item @file{ntp.cf}	      @tab Setup NTP server and clients.
@item @file{perl_env.cf}      @tab PERL programming language install.
@item @file{php_webserver.cf}	@tab Setup a PHP webserver.
@item @file{python_env.cf}	@tab PYTHON programming install.
@item @file{ruby_env.cf}      @tab Setup ruby on rails environment.
@item @file{sshd_conf.cf}     @tab Ensure sshd config is correct.
@item @file{tomcat_server.cf}	@tab Setup a tomcat server.
@item @file{varnish.cf}      @tab Set up Varnish web accelerator
@end multitable


@page
@node Orion Support
@unnumberedsec Orion Support

@sp 1
Your CFEngine Orion Cloud Pack comes with 30 days of email support to
help you get started (@code{cloudsupport@@cfengine.com}).  Support
applies to the single individual who is recorded as the purchaser of
the software, unless otherwise agreed with CFEngine.

On receipt of a query, our engineers will respond
withing 48 hours on business days for a maximum period of 30 days from
the date of purchase of the Orion Cloud Pack. Existing users of
CFEngine Nova will receive support transparently under their existing
support arrangements.

Support queries may cover issues connected with the use of CFEngine
Orion Cloud Pack, but not with the use of your Cloud provider. Support
does not include the development of new solutions or other consulting.
Users are free to seek Professional Services from CFEngine for such
matters.

@node Orion License
@unnumberedsec Orion License

The CFEngine Orion Cloud Pack is not Free or Open Source Software.
It is provided under a perpetual license as part of the
CFEngine Cloud Pack (hereby called The Software). The Software may be
used within a single Internet Domain. If no Internet Domain is
registered, it may be used within a single legal organization
possessing a maximum of 1024 computers, or by a single individual with
up to 250 computers. Multiple licenses may be purchased, as needed.

The Licensee may modify, adapt and create derivative works based upon
the Software, for use within its organisation and for sharing between
other consecutive licensees. However, the Licensee shall not
reproduce, distribute, resell, rent, lease or disclose the Software in
any manner or form to any other third party not holding a license for
the Software.

The Licensee may not transfer any of its rights under this agreement
without the prior and express written consent of CFEngine.

CFEngine does not transfer any copyrights or other intellectual
property rights relating to the Software to the Licensee. Such rights
are protected by intellectual property legislation in the United
States, Europe and other jurisdictions and by international treaty
provisions. CFEngine and its suppliers retain all rights in the
Software that are not expressly granted to the Licensee through this
license.

The Licensee is not allowed to remove, alter or destroy any proprietary,
trademark or copyright markings or notices placed upon or contained
within the Software.

To the maximum extent permitted by law, CFEngine disclaims any
warranty for the Software. The Software, any services and any related
documentation are provided on an "as is" basis without warranty of any
kind, whether express or implied, including, but not limited to,
implied warranties of merchantability, fitness for a particular
purpose or non-infringement. Hereunder the parties acknowledges that
CFEngine does not warrant for the performance of any data centre on
which the Software runs, or the absence of any errors in the Software,
and that any such errors does not constitute a contractual defect.

The liability of the parties in contract, tort (including negligence)
or otherwise shall for all incidents during the entire term of 30 days
from the date of purchase be limited to a half of the fees paid for a
perpetual license. CFEngine or its suppliers shall not be liable for
any special, incidental, indirect or consequential damages whatsoever
(including, without limitation, damages for loss of business profits,
lost savings, business interruption, loss of business information,
personal injury, loss of privacy, loss of goodwill or any other
financial loss) arising out of the use of or inability to use the
Software, even if advised of the possibility of such damages.

For third-party software that is integrated with or used by
CFEngine, the current terms of the relevant third party software
supplier shall apply.



@page
@node  Cultural References to Orion and Cloud
@unnumberedsec Cultural References to Orion and Cloud

Orion, the hunter from Greek mythology, was taken by renaissance
mythologist Natalis Comes to be an allegory for an approaching storm
cloud.

Better-known today, Orion is the name of one of the most famous and
studied astronomical constellations in the night sky.  It contains the
three bright stars of Orion's belt (the three steps to the cloud) and
the @i{Orion M42 Nebula} (a gigantic dust cloud):
@url{http://en.wikipedia.org/wiki/Orion_Nebula} beneath its belt.
Now with the CFEngine Orion Cloud Pack, you too can get the Cloud
under your belt.

The Orion Nebula is, in fact, part of a much larger cloud or nebula in
the constellation of Orion
(@url{http://en.wikipedia.org/wiki/Orion_Molecular_Cloud_Complex}). We
chose the name Orion for our Cloud Pack (apart from the obvious puns)
because we believe that Cloud Computing is only a stepping stone
towards what we term @i{Molecular Computing}, in which many
independent platforms and services bond together to form @i{network
patterns}.  These patterned systems act like molecules with new
properties, bonded together by @i{promises}. This view follows
naturally from a description of computing using Promise Theory,
replacing traditional monolithic and hierarchical systems with a more
natural form of engineering
(@url{https://cfengine.com/inside/deepBackground}).

@sp 1
@center{@image{Orion,9cm,,Orion,png}}

@center{Hubble Image: http://apod.gsfc.nasa.gov/apod/ap051013.html}



@node EC2 Cloud Command line setup
@appendix EC2 Cloud command line setup

This Appendix details the creation of an EC2 instance, i.e. the
pre-requisites for CFEngine installation, using a command-line approach.  
You may also use the web interface.

For greater depth and explanation of all the commands and options see
the getting started guide:
@smallexample
@url{http://docs.amazonwebservices.com/AWSEC2/latest/GettingStartedGuide/}.
@end smallexample

@sp 2 
@enumerate
@item  Create an amazon web services account and sign up for Amazon Elastic Compute Cloud (EC2) at @url{http://aws.amazon.com/ec2/}.

@item  Login and go to the access identifiers page.

@item  Create new X.509 certificate.

@item  Download the private key file and the X.509 certificate.

@item  Download the EC2 api tools:
@smallexample
http://developer.amazonwebservices.com/connect/entry.jspa
?categoryID=88&externalID=351
@end smallexample

@item  Extract the tools into a suitable directory: $dir.

@item  Setup EC2 control environment:
@itemize
	@item Install Java
	@item @code{export EC2_HOME=~/$dir}
	@item @code{export PATH=$PATH:$EC2_HOME/bin}
	@item @code{export EC2_PRIVATE_KEY=pk-KEYNAME.pem}
	@item @code{export EC2_CERT=cert-KEYNAME.pem}
	@item @code{export JAVA_HOME=/path/to/java/}
@end itemize
@item  Create keys for accessing your instances:
@itemize
	@item @code{cd $dir}
	@item @code{ec2-add-keypair keyname}
		where 'keyname' is users choice.
   Save output to a file: 
@end itemize
@itemize
	@item @code{vi $dir/keyname}
	@item paste in key and save.
	@item @code{sudo chmod 600 keyname}
@end itemize
@item  Choose an Amazon Machine Image (AMI) to launch: e.g. @samp{ami-6d0be204}, an Ubuntu 9.10 server with CFEngine community pre-installed (small instance in us-east region).



@item @b{Warning billing begins after the next command}. Run the instance:
@itemize
	@item @code{ec2-run-instances ami-6d0be204 -k keyname}

	Note is it possible to launch an instance without specifying a
key but it will not be accessible via ssh if you do not create one.  The selected
public AMI is an Ubuntu 9.10 i368 server with CFEngine community
installed.
@end itemize	
@item  Get status of your instance:
@itemize
	@item @code{ec2-describe-instances}

	This will reveal the external URL to your instance similar to:

	@code{ec2-xxx-xxx-xxx-xxx.compute-1.amazonaws.com}
@end itemize

@item  Allow ssh:
@itemize
	@item @code{ec2-authorize default -p 22}

	Note this will allow ssh access to all instances in the default security group from anywhere on port 22.

	@item Allow http traffic:
	 @code{ec2-authorize default -p 80}
@end itemize
	
@item  Access via ssh:
@itemize
	@item @code{ssh -i keyname ubuntu@@ec2-xxx-xxx-xxx-xxx.compute-1.amazonaws.com}
@end itemize
@end enumerate



@node EC2 Cloud CFEngine Configuration
@appendix EC2 Cloud CFEngine Configuration

You will need @code{root} access to the Amazon instance.
@sp 1
@enumerate
@item Copy the CFEngine Orion Cloud Pack to your instance and unpack it:
@smallexample
scp -i keyname cloud_pack.tar ubuntu@@ec2-xxx-xxx-xxx-xxx.compute-1.amazonaws.com
mv cloud_pack.tar /var/cfengine/masterfiles
cd /var/cfengine/masterfiles
tar xvf cloud_pack.tar
@end smallexample

@item Set policy server ip address: e.g.

@code{ifconfig eth0 ...}

@item Copy this IP address to the policy server variable in the @file{update.cf} and 
@file{promises.cf} files.

@item @code{cf-agent -f /var/cfengine/masterfiles/failsafe.cf}
@end enumerate

@noindent Note billing continues as long as instances are running. 
To terminate an instance:

@itemize
	@item @code{ec2-terminate-instances instance_number}
	The instance number (i-xxxxxxxx) is revealed by running: 
	@item @code{ec2-describe-instances}
@end itemize




@node Integrating the Cloud Pack Futher
@appendix Integrating the Cloud Pack Futher

The Orion Cloud Pack is delivered in a form that makes it easy to choose the
services. As you move forward, or want to integrate these methods into a larger
framework, you can choose to alter the way in which you `call up' these
methods.

In the Cloud Pack, all bundles are listed in the  @code{bundlesequence},
making them simple to compare and comment out, but we may also re-bundle
them in a single bundle like this:

@verbatim
body common control
{
bundlesequence => { "update", "main" };
}

@end verbatim

@noindent To re-bundle, we create a single agent bundle (e.g. called `main') and
call the bundles as method promises. An advantage of this is to make it easier to
classify different parts of your configuration in a single location. For instance,
you might want two groups of servers supporting different platforms, one supporting
Ruby and one supporting PHP:

@verbatim

bundle agent main
{
methods:

 group1::
   "environment 1" usebundle => ruby_on_rails;

 group2::
   "environment 2" usebundle => php_apache;

 any::
   "common" usebundle => fix_broken_software;
   "common" usebundle => garbage_collection;
   "common" usebundle => harden_xinetd;
}

@end verbatim
@noindent This approach allows a great control over the execution of the bundles,
with additional transaction controls, but cannot be considered superior to the simple
list used in the Cloud Pack. Ultimately this is a question of style.


@node Ubuntu quirks
@appendix Ubuntu quirks

The Ubuntu operating systems does not have a root account you can log onto directly.
You first log in as the @samp{ubuntu} user, and then type @samp{sudo su} to become
root.

@bye
