\input texinfo-altfont
\input texinfo-logo
\input texinfo
@selectaltfont{cmbright}
@setlogo{CFEngineFrontPage}

@c *********************************************************************
@c
@c  This is a TEXINFO file. It generates both TEX documentation and
@c  the "on line" documentation "info" files.
@c
@c  The file is structured like a programming language. Each chapter
@c  starts with a chapter comment.
@c
@c  Menus list the subsections so that an online info-reader can parse
@c  the file hierarchically.
@c
@c ***********************************************************************
@c %** start of header
@setfilename st-agile.info
@settitle Agility in Infrastructure Engineering
@setchapternewpage odd
@c %** end of header

@titlepage
@title Agility in Infrastructure Engineering
@subtitle A CFEngine Special Topics Handbook
@author CFEngine AS


@page

@cartouche
@quotation
Agility is a widely used term in today's fast moving IT industry. It
reflects a need and a desire to respond quickly to changes in the
environment.  This document explains the management factors that
affect speed, agility and scale in common scenarios, and what CFEngine can
do to help you be agile.
@end quotation
@end cartouche

@vskip 2cm
Last updated December 2011

@vskip 0pt plus 1filll
Copyright @copyright{} 2011 CFEngine AS

@end titlepage


@c *************************** File begins here ************************


@ifinfo
@dircategory CFEngine Training
@direntry
* CFEngine Modularization:
                      CFEngine is a language based tool specifically
                      designed for configuring and maintaining
                      Unix-like operating systems attached
                      to a TCP/IP network.
@end direntry
@end ifinfo

@ifnottex
@node Top, Defining Agilty, (dir), (dir)
@top Agility



@end ifnottex
@iftex
@contents
@end iftex

@ifhtml
@html
<a href="#Contents"><h1>COMPLETE TABLE OF CONTENTS</h1></a>
<h2>Summary of contents</h2>
@end html
@end ifhtml



@menu
* Defining Agilty::             
@end menu

@node Defining Agilty,  , Top, Top
@chapter Defining Agilty
@sp 1

We intuitively recognize agility as the capability to respond fast
enough to a pressing event. The event might represent danger, or
merely a self-imposed deadline.  In any case, there is generally a
penalty associated with not responding quickly.

To understand agility, we have to understand time. Agility is a
relative concept: it's about being fast enough, in the right context.
Let's try to gain an engineering perspective on agility to see what
enables it and what throttles it.

We can define a measure of agility as the ratio of available speed to
required speed.

@verbatim
Agilty ~ Available speed with control
         ----------------------------
                Required speed
@end verbatim

@noindent This definition behaves reasonably. If we our speed matches what we need, then
we can claim 100% agility. If it is less than required, thenwe get a smaller number, and if
we have excess speed we can claim a superefficiency.

What is required speed?  It is is the rate of change you have to be
able to enact in order to achieve and maintain a state (keep a
promise) that is aligned with a an organization's well-being. If we
think in terms of services, it is the Service Level you have to
achieve to comply with a Service Level Agreement.  If we think of a
support ticket, it is the speed we have to work at in order 
to keep the impact of an unpredicted change within acceptable
levels. What is acceptable is clearly a subjective judgement, a matter
for policy to decide. So there are many uncertainties and relativisms.

The weakest link in a chain of dependencies limits the speed of any chain.
The weakest link might be a human who doesn't understand what to do, or a
broken wire or a misconfigured switch. An organization is an information
rich @i{society} with complex interplays between Man and Machine.

The available speed is called the Capacity of the component. 

Let's create some scaling laws.

@verbatim
Average available speed ~ Expected capacity * reliability
                          ----------------------------
                                  Consumers
@end verbatim


@verbatim
Efficiency ~  Number of objects affected
             ----------------------------
                Number of rules + 1
@end verbatim

@verbatim
Comprehensibilty ~  Predictability or reliability
                    ----------------------------
                         Machines * rules
@end verbatim


Mean Time to Repair.

Nimble, lightweight, strong, balanced..

From the perspective of agility, regular scheduling and speed of change are the 
values we covet.


@image{agility,12cm}

@menu
* What is scalability?::        
@end menu

@node What is scalability?,  , Defining Agilty, Defining Agilty
@section What is scalability?
@sp 1

By scalability we mean the intrinsic capacity of a system to
handle growth. Growth in a system can occur in three ways: by the volume of input
the system must handle, in the total size of its infrastructure,
and by the complexity of the processes within it.

For a system to be called scalable, growth should proceed unhindered,
i.e. the size and volume of processing may expand without
significantly affecting the average service level per node.  

Although most of us have an intuitive notion of what scalability
means, a full understanding of it is a very complex issue, mainly
because there are so many factors to take into account. One factor
that is often forgotten in considering scalability, is the human
ability to @i{comprehend} the system as it grows. Limitations of
comprehension often lead to over-simplification and
lowest-common-denominator standardization.

Scalability is addressed in a separate document: @i{Scale and Scalability}.





@ifhtml
@html
<a name="Contents">
@contents
@end html
@end ifhtml

@ifhtml
@html
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https:// 
ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google- 
analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-2576171-2");
pageTracker._initData();
pageTracker._trackPageview();
</script>
@end html
@end ifhtml

@bye

