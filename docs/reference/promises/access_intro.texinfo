
Access promises are conditional promises made by the server about file
objects. The promise has two consequences. For file copy requests, the
file becomes transferrable to the remote client according to the
conditions specified in the server promse (i.e. if the connection
encryption requirements are met, and if the client has been granted
appropriate privileges with @code{maproot} (like its NFS counterpart)
to be able to see file objects not owned by the server process owner).

The promise has two mutally exclusive attributes @samp{admit} and
@samp{deny}. Use of @samp{admit} is preferred as mistakes and
omissions can easily be made when excluding from a group.

When access is granted to a directory, the promise is automatically
given about all of its contents and sub-directories.
The access promise allows overlapping promises to be made, and these
are kept in a first-come-first-served fashion. Thus file
objects (promisers) should be listed in order of most-specific file
first. In this way, specific promises will override less specific ones.

@cartouche
@smallexample

 access:

    @var{"/path/file_object"}

      admit   => @{ @var{"hostname"}, @var{"ipv4_address"}, @var{"ipv6_address"}  @};


@end smallexample
@end cartouche

