
@verbatim

outputs:

  "run_agent";		# Promise handle, verbose (default) output

  "web_server"		# Bundle handle, inform output
     output_level => "inform",
     promiser_type => "bundle";

@end verbatim

A very handy paradigm is to include outputs promises in every bundle, and
guard them with classes.  For example:

@verbatim

bundle agent some_function
{
vars:
    ...
classes:
    ...
outputs:
  debug_some_function::
      "some_function"
	 output_level => "verbose",
	 promiser_type => "bundle";
files:
    ...
}

@end verbatim

You can then execute your promises normally with no extra output, but should
you wish to temporarily enable debugging, you can simply do so from the
command line by specifying @samp{-D debug_some_function}.  You can also supply
multiple arguments to @samp{-D} to debug multiple bundles.  Of course, you can
also provide much finer-grained control by creating outputs promises on
specific promise handles.
