
Used for log rotation. If the file is named @file{foo} and the @samp{rotate}
attribute is set to @samp{4}, as above, then initially @file{foo} is copied
to @file{foo.1} and the old file @file{foo} is zeroed out (that is, the inode
of the original logfile does not change, but the original logfile will be
empty after the rotation is complete).

The next time the promise is executed, @file{foo.1} will be renamed
@file{foo.2}, @file{foo} is again copied to @file{foo.1} and the old file
@file{foo} is again zeroed out.

Each time the promise is executed (and typically, the promise would be
executed as guarded by time-based or file-size-based classes), the files are
copied/zeroed or rotated as above until there are @samp{rotate} numbered files
plus the one "main" file.  In the example above, the file @file{foo.3} will be
renamed @file{foo.4}, but the old version of the file @file{foo.4} will be
deleted (that is, it "falls off the end" of the rotation).
